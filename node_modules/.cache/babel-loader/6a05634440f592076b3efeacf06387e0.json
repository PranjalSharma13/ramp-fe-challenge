{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pranj\\\\OneDrive\\\\Desktop\\\\Projects\\\\ramp-fe-challenge\\\\ramp-fe-challenge\\\\src\\\\components\\\\InputSelect\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE, updateTransactionApproval } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    loading: employeesLoading,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    loading: transactionsLoading,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isFilteredByEmployee, setIsFilteredByEmployee] = useState(false);\n  const [allTransactions, setAllTransactions] = useState([]);\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : allTransactions;\n  }, [paginatedTransactions, transactionsByEmployee, allTransactions]);\n  const loadAllTransactions = useCallback(async function () {\n    let append = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    transactionsByEmployeeUtils.invalidateData();\n    setIsFilteredByEmployee(false);\n    const data = await paginatedTransactionsUtils.fetchAll(append);\n    setAllTransactions(prev => append ? [...prev, ...data] : data);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils.invalidateData();\n    setIsFilteredByEmployee(true);\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const handleApprovalToggle = useCallback((transactionId, newApprovalStatus) => {\n    setAllTransactions(prev => prev.map(transaction => transaction.id === transactionId ? { ...transaction,\n      approved: newApprovalStatus\n    } : transaction));\n    updateTransactionApproval(transactionId, newApprovalStatus); // This function should update the global state or backend\n  }, []);\n  useEffect(() => {\n    if (employees === null && !employeesLoading) {\n      employeeUtils.fetchAll().then(() => loadAllTransactions());\n    }\n  }, [employeesLoading, employees, loadAllTransactions, employeeUtils]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: employeesLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue && (newValue.id === null || newValue.id === '')) {\n            await loadAllTransactions();\n          } else {\n            await loadTransactionsByEmployee(newValue.id);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions,\n          onApprovalToggle: handleApprovalToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), !isFilteredByEmployee && (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: transactionsLoading,\n          onClick: async () => {\n            await loadAllTransactions(true);\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Mipc/glLuEXQbYpKlqlMS7Wjt4A=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","updateTransactionApproval","App","data","employees","loading","employeesLoading","employeeUtils","paginatedTransactions","transactionsLoading","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","isFilteredByEmployee","setIsFilteredByEmployee","allTransactions","setAllTransactions","transactions","loadAllTransactions","append","invalidateData","fetchAll","prev","loadTransactionsByEmployee","employeeId","fetchById","handleApprovalToggle","transactionId","newApprovalStatus","map","transaction","id","approved","then","item","value","label","firstName","lastName","newValue","nextPage"],"sources":["C:/Users/pranj/OneDrive/Desktop/Projects/ramp-fe-challenge/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE, updateTransactionApproval } from \"./utils/constants\";\nimport { Employee } from \"./utils/types\";\n\nexport function App() {\n  const { data: employees, loading: employeesLoading, ...employeeUtils } = useEmployees();\n  const { data: paginatedTransactions, loading: transactionsLoading, ...paginatedTransactionsUtils } = usePaginatedTransactions();\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee();\n  const [isFilteredByEmployee, setIsFilteredByEmployee] = useState(false);\n  const [allTransactions, setAllTransactions] = useState([]);\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? allTransactions,\n    [paginatedTransactions, transactionsByEmployee, allTransactions]\n  );\n\n  const loadAllTransactions = useCallback(async (append = false) => {\n    transactionsByEmployeeUtils.invalidateData();\n    setIsFilteredByEmployee(false);\n    const data = await paginatedTransactionsUtils.fetchAll(append);\n    setAllTransactions((prev) => (append ? [...prev, ...data] : data));\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData();\n      setIsFilteredByEmployee(true);\n      await transactionsByEmployeeUtils.fetchById(employeeId);\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  );\n\n  const handleApprovalToggle = useCallback((transactionId, newApprovalStatus) => {\n    setAllTransactions((prev) =>\n      prev.map((transaction) =>\n        transaction.id === transactionId ? { ...transaction, approved: newApprovalStatus } : transaction\n      )\n    );\n    updateTransactionApproval(transactionId, newApprovalStatus); // This function should update the global state or backend\n  }, []);\n\n  useEffect(() => {\n    if (employees === null && !employeesLoading) {\n      employeeUtils.fetchAll().then(() => loadAllTransactions());\n    }\n  }, [employeesLoading, employees, loadAllTransactions, employeeUtils]);\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={employeesLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue && (newValue.id === null || newValue.id === '')) {\n              await loadAllTransactions();\n            } else {\n              await loadTransactionsByEmployee(newValue.id);\n            }\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} onApprovalToggle={handleApprovalToggle} />\n\n          {!isFilteredByEmployee && paginatedTransactions?.nextPage !== null && (\n            <button\n              className=\"RampButton\"\n              disabled={transactionsLoading}\n              onClick={async () => {\n                await loadAllTransactions(true);\n              }}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}